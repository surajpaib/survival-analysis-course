---
title: "First Week Survival Analysis"
output: html_notebook
---

This notebook contains code and practice for Week 1 of the Survival Analysis Course

First we import the needed packages,
```{r}
library(survival) # this is the cornerstone command for survival analysis in R
library(ggplot2) # newer package that does nice plots
```


Load the heart-failure mortality data offered by the course.
```{r}
df = read.csv(file = "simulated HF mort data for GMPH (1K) final.csv", header=TRUE, sep=',')

names(df)
```
From the dataframe, use the followup time "fu_time" and "death" variables to fit a Kaplan-Meier curve first.
```{r}
fu_time <- df[,"fu_time"] # continuous variable (numeric) 
death <- df[,"death"] # binary variable (numeric) 

km_fit = survfit(Surv(fu_time, death) ~ 1)

plot(km_fit)

```

Next, we use gender as a predictor and plot a KM curve. 
```{r}
gender = as.factor(df[, "gender"])

km_gender_fit = survfit(Surv(fu_time, death) ~ gender)

plot(km_gender_fit);

```

To differentiate between the two curves, a log-rank test can be used which compares 
differences in expected and observed values of deaths and computes a X2 value that is then compared with 
a chi-squared distribution. Great link to understand this: https://www.bmj.com/content/328/7447/1073

```{r}
survdiff(Surv(fu_time, death) ~ gender, rho=0)

```
High pvalue above suggests that the differences in survival between gender are not statistically significant.
Next, we look at using age as a predictor. It first needs to be categorized, so lets do a threshold of 65

```{r}
older_age_group = ifelse(df[,"age"]>=65, 1, 0)

km_age_fit = survfit(Surv(fu_time, death) ~ older_age_group)

plot(km_age_fit)

survdiff(Surv(fu_time, death) ~ older_age_group, rho=0)
```
It is seen in the KM plot that the survival curves are well differentiated. Using a log rank test shows the same. 


